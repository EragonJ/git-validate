#!/usr/bin/env node

var Exec = require('child_process').exec;
var Path = require('path');
var Utils = require('../lib/utils');

var internals = {};


// Create a copy of process.env, with the PATH environment variable
// (case insensitive) modified to include the given project's
// node_modules/.bin directory.
internals.getEnv = function (projectRoot) {

    // Disabling coverage on this line since we'll never be running tests
    // in a way such that process.platform is both 'win32' and not 'win32'
    /*$lab:coverage:off$*/
    var pathSep = process.platform === 'win32' ? ';' : ':';
    /*$lab:coverage:on$*/
    var env = {};

    for (var key in process.env) {
        if (key.toLowerCase() === 'path') {
            env[key] = Path.join(projectRoot, 'node_modules', '.bin') + pathSep + process.env[key];
        }
        else {
            env[key] = process.env[key];
        }
    }

    return env;
};


// Actually run the given script for the given project
internals.runCmd = function (projectRoot, name, command, done) {

    done = done || process.exit;
    var env = internals.getEnv(projectRoot);
    var gitRoot = Utils.findGitRoot(projectRoot);

    process.stdout.write('running ' + name + ': ');

    Exec(command, { cwd: projectRoot, env: env }, function (err, stdout, stderr) {
        if (err) {
            console.log('failed!');
            console.log(stdout);
            console.log(stderr);
            internals.exit(err.code, done);
        } else {
            console.log('ok.');
            internals.exit(0, done);
        }
    });
}


// This method shamelessly adapted from https://github.com/cowboy/node-exit
/* $lab:coverage:off$ */
internals.exit = function (code, callback) {
    var streams = [process.stdout, process.stderr];
    var drainCount = 0;

    function tryToExit() {
        if (drainCount === streams.length) {
            callback(code);
        }
    }

    streams.forEach(function (stream) {
        if (stream.bufferSize === 0) {
            drainCount++;
        } else {
            stream.write('', 'utf-8', function () {
                drainCount++;
                tryToExit();
            });

            stream.write = function () {};
        }
    });

    tryToExit();
}
/* $lab:coverage:on$ */

console.log('Running %s checks...', Path.basename(process.argv[1]));
